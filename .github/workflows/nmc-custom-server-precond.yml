###
# SPDX-License-Identifier: AGPL-3.0
#
# Author: Bernd rederlechner <bernd.rederlechner@t-systems.com
#
# Assemble a customisation for recent trunk or a stable branch
# If trunk, no backports are considered. For stable, only the
# backports targetted for this baseline are considered.
#
# Assembly fails if a PR does not merge automatically.
#

name: MCLOUD custom server build

on:
  workflow_call:
    inputs:
      stable:
        description: name of the stable baseline branch to build on
        required: true
        type: string
      increment:
        description: increment to the nextcloud release name
        required: true
        type: number
    outputs:
      tag:
        description: Compute server release tagname 
        value: ${{ jobs.servercheck.outputs.tagname }}

jobs:
  servercheck:
    runs-on: ubuntu-latest
    env:
      BUILD_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tagname: ${{ steps.tagname.outputs.result }}
    steps:
      - name: Compute release tag name
        id: tagname
        run: |
          echo "result="nmc${INPUTS_STABLE##*/}-$INPUTS_INCREMENT" >> $GITHUB_OUTPUT
      - name: Check ambigouity
        id: release_not_exist
        uses: actions/github-script@v6
        with:
          github-token: ${{ env.BUILD_TOKEN }}
          script: |
            // Test whether release is readable
            try {
              const releaseTag = "${{ steps.tagname.outputs.result }}";
              const { data: release } = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo:  context.repo.repo,
                tag:   releaseTag
              });
              core.setFailed(`Release tags/${releaseTag} already exists!`);
            } catch (error) {
              // expect release to be not found
            }